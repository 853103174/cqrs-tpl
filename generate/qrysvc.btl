package ${packageName};

import java.util.function.Function;

import org.beetl.sql.core.page.PageResult;
import org.beetl.sql.core.query.Query;
import org.springframework.stereotype.Service;

import ${importBO}.${className}PageVO;
import ${importBO}.${className}ViewVO;
import ${importPO}.${className}PO;
import ${importDao}.${className}Dao;
import ${importDO}.${className}PageBO;

import io.github.linpeilie.Converter;
import lombok.RequiredArgsConstructor;

/**
 *
 * ${tableRemark}
 *
 *
 */
@Service
@RequiredArgsConstructor
public class ${className}QrySvc {

    private final Converter converter;
    private final ${className}Dao dao;

    /**
     * 分页
     *
     * @param bo
     * @return
     */
    public PageResult<${className}PageVO> page(${className}PageBO bo) {
        PageResult<${className}PO> result = dao.createLambdaQuery()
                //.andEq(${className}PO::getId, Query.filterNull(bo.getId()))
                .page(bo.getPageNum(), bo.getPageSize());
        Function<${className}PO, ${className}PageVO> function = po -> converter.convert(po, ${className}PageVO.class);

        return result.convert(function);
    }

    /**
     * 查询单个
     *
     * @param id
     * @return
     */
    public ${className}ViewVO view(Long id) {
        return converter.convert(dao.single(id), ${className}ViewVO.class);
    }

}
