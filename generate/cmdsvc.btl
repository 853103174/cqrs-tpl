package ${packageName};

import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

import ${importPO}.${className}PO;
import ${importDao}.${className}Dao;
import ${importDO}.${className}CreateBO;
import ${importDO}.${className}ModifyBO;

import io.github.linpeilie.Converter;
import lombok.RequiredArgsConstructor;

/**
 *
 * ${tableRemark}
 *
 *
 */
@Service
@RequiredArgsConstructor
@Transactional(rollbackFor = Exception.class)
public class ${className}CmdSvc {

    private final ${className}Dao dao;
    private final Converter converter;

    /**
     * 保存
     *
     * @param bo
     */
    public void create(${className}CreateBO bo) {
        ${className}PO po = converter.convert(bo, ${className}PO.class);
<%for(cm in columns){%>
    <%if(cm.colName=="del"){%>
        po.setDel(0);
    <%break;%>
    <%}%>
<%}%>
        dao.insertTemplate(po);
    }

    /**
     * 修改
     *
     * @param bo
     */
    public void modify(${className}ModifyBO bo) {
        ${className}PO po = converter.convert(bo, ${className}PO.class);
        dao.updateTemplateById(po);
    }

}
