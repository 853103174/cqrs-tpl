package ${packageName};

import java.time.LocalDateTime;

import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

import com.sdnc.common.auth.AccessContext;
import ${importPO}.${className}PO;
import ${importDao}.${className}Dao;
import ${importDO}.${className}CreateBO;
import ${importDO}.${className}ModifyBO;

import io.github.linpeilie.Converter;
import lombok.RequiredArgsConstructor;

/**
 *
 * ${tableRemark}
 *
 *
 */
@Service
@RequiredArgsConstructor
@Transactional(rollbackFor = Exception.class)
public class ${className}CmdSvc {

    private final Converter converter;
    private final ${className}Dao dao;

    /**
     * 创建
     *
     * @param bo
     */
    public void create(${className}CreateBO bo) {
        LocalDateTime now = LocalDateTime.now();
        Long userId = AccessContext.getAccessUser().getId();
        ${className}PO po = converter.convert(bo, ${className}PO.class);
        //po.setCreateBy(userId);
        //po.setCreateAt(now);
        //po.setUpdateBy(userId);
        //po.setUpdateAt(now);
        //po.setDel(0);
        dao.insertTemplate(po);
    }

    /**
     * 修改
     *
     * @param bo
     */
    public void modify(${className}ModifyBO bo) {
        LocalDateTime now = LocalDateTime.now();
        Long userId = AccessContext.getAccessUser().getId();
        ${className}PO po = converter.convert(bo, ${className}PO.class);
        //po.setUpdateBy(userId);
        //po.setUpdateAt(now);
        dao.updateTemplateById(po);
    }

}
